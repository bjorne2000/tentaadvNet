// <auto-generated />
using System;
using BackendHamster;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendHamster.Migrations
{
    [DbContext(typeof(DbContextHamster))]
    [Migration("20210409154140_laTillSakerJagMissat")]
    partial class laTillSakerJagMissat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendHamster.AktivityLogg", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("hamsterLoggID")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeLogg")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("hamsterLoggID");

                    b.ToTable("logg");
                });

            modelBuilder.Entity("BackendHamster.Cage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cageNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("cages");
                });

            modelBuilder.Entity("BackendHamster.Hamster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("inCheck")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ownerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("senastMotioneradTid")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("hamsters");
                });

            modelBuilder.Entity("BackendHamster.Motionsyta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("motionTid")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("motionsyta");
                });

            modelBuilder.Entity("BackendHamster.AktivityLogg", b =>
                {
                    b.HasOne("BackendHamster.Hamster", "hamsterLogg")
                        .WithMany()
                        .HasForeignKey("hamsterLoggID");

                    b.Navigation("hamsterLogg");
                });
#pragma warning restore 612, 618
        }
    }
}
